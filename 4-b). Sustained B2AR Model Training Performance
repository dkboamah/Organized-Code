
library(caret)
library(pROC)

setwd("/mnt/home/david_boamah/Data_Analysis/rda_Files")
load("Batch1_Data.rda")

setwd("/mnt/home/david_boamah/New_Data_Analysis/rda_Files/Feature_Selection/mRMR_SVM_RFE")
load("mRMR_SVMRFE_Sus_B2.rda")
setwd("/mnt/home/david_boamah/New_Data_Analysis/rda_Files/Feature_Selection/mRMR_VarSel")
load("mRMR_varSelRF_Sus_B2.rda")

Sus_B2_Batch1 <- testMatrix_Creation(matrix=Sus_B2_top_1000_M_training,testMatrix=Batch1_M_Matrix)

number_list <- c((1:100)*10)
number_list <- as.list(number_list)
number_list

### Calculate the training performance of models built using the 1000 features selected using mRMR filter feature selection approach
## Additionally, determine the specificity of these features for the prediction task by calclulating the performance when applied to alternate prediction tasks (predicting exposure to SSRI - Sustained or Any Exposure)

RF_sus_B2_ROC_Sus_B2 <- RF_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
RF_sus_B2_ROC_Sus_SSRI <- RF_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
RF_sus_B2_ROC_Any_SSRI <- RF_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Any_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)

svmL_sus_B2_ROC_Sus_B2 <- svmL_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
svmL_sus_B2_ROC_Sus_SSRI <- svmL_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
svmL_sus_B2_ROC_Any_SSRI <- svmL_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Any_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)

svmR_sus_B2_ROC_Sus_B2 <- svmR_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
svmR_sus_B2_ROC_Sus_SSRI <- svmR_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)
svmR_sus_B2_ROC_Any_SSRI <- svmR_Train_Best_Tune_ROC(x=1000,vector=Sus_B2_topFeatures_mRMR_SVMRFE,matrix=Sus_B2_Batch1,exposure=Any_Batch1_SSRI_Use,matrixSecond=Sus_B2_top_1000_M_training,exposureSecond=B2_Sustained_Training)

### Determine the specificity of the features selected using the mRMR filter feature approach by calculating the training performance of 1000 models built using 1000 features randomly selected from the full 455,644 features

OG_RF_BestTune <- RF_Train_Best_Tune(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use)
OG_svmL_BestTune <- svmL_Train_best_tune(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use)
OG_svmR_BestTune <- svmR_Train_best_tune(x=1000,vector=Sus_B2_mRMR_VarSel_Index_noReOrder,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use)

Random_Train_RF_ROC_list <- list()
Random_Train_RF_auc_list <- list()

set.seed(123)
for(i in 1:1000){
	Random_Train_RF_ROC_list[i] <- list(Random_RF_Train_ROC(x=1000,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use))
}
#Mean AUROC: 0.5534 (Range: 0.4194–0.7546)

Random_Train_RF_auc_list <- sapply(X=Random_Train_RF_ROC_list,FUN=auc)

Random_Train_svmL_ROC_list <- list()
Random_Train_svmL_auc_list <- list()

set.seed(123)
for(i in 1:1000){
	Random_Train_svmL_ROC_list[i] <- list(Random_svmL_Train_ROC(x=1000,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use))
}

Random_Train_svmL_auc_list <- sapply(X=Random_Train_svmL_ROC_list,FUN=auc)

Random_Train_svmR_ROC_list <- list()
Random_Train_svmR_auc_list <- list()

set.seed(123)
for(i in 1:1000){
	Random_Train_svmR_ROC_list[i] <- list(Random_svmR_Train_ROC(x=1000,matrix=Sus_B2_Batch1,exposure=Sus_Batch1_B2_Use))
}
#Mean AUROC: 0.5557 (Range: 0.3959 – 0.7912)

Random_Train_svmR_auc_list <- sapply(X=Random_Train_svmR_ROC_list,FUN=auc)

